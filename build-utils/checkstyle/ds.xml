<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<module name="Checker">

	<!-- Checks that a package.html file exists for each package.     -->
	<!--<module name="JavadocPackage"/>-->

	<!-- Checks whether files end with a new line.                        -->
	<module name="NewlineAtEndOfFile"/>

	<!-- Checks that property files contain the same keys.         -->
	<!--<module name="Translation"/>-->


 	<module name="TreeWalker">

		<!-- Checks for Javadoc comments.                     -->
		<module name="JavadocMethod">
			<property name="scope" value="public"/>
			<property name="allowMissingThrowsTags" value="true" />
		</module>
		<module name="JavadocType">
			<property name="scope" value="protected"/>
		</module>
		<module name="JavadocVariable">
			<property name="scope" value="public"/>
		</module>
		<module name="JavadocStyle"/>


		<!-- Checks for Naming Conventions.                  -->
		<!--<module name="ConstantName"/>
		<module name="LocalFinalVariableName"/>
		<module name="LocalVariableName"/>
		<module name="MemberName"/>
		<module name="MethodName"/>
		<module name="PackageName"/>
		<module name="ParameterName"/>
		<module name="StaticVariableName"/>
		<module name="TypeName"/>-->


		<!-- Checks for Headers                                -->
		<!-- See http://checkstyle.sf.net/config_header.html   -->
		<!-- <module name="Header">                            -->
		<!-- The follow property value demonstrates the ability     -->
		<!-- to have access to ANT properties. In this case it uses -->
		<!-- the ${basedir} property to allow Checkstyle to be run  -->
		<!-- from any directory within a project. See property      -->
		<!-- expansion,                                             -->
		<!-- http://checkstyle.sf.net/config.html#properties        -->
		<!-- <property                                              -->
		<!--     name="headerFile"                                  -->
		<!--     value="${basedir}/java.header"/>                   -->
		<!-- </module> -->

		<!-- Following interprets the header file as regular expressions. -->
		<!-- <module name="RegexpHeader"/>                                -->


		<!-- Checks for imports      -->
		<!--<module name="AvoidStarImport"/>
		<module name="IllegalImport"/>
		<module name="RedundantImport"/>
		<module name="UnusedImports"/>-->


		<!-- Checks for Size Violations.    -->
		<!--<module name="FileLength"/>
		<module name="LineLength">
			<property name="max" value="120"/>
		</module>
		<module name="MethodLength"/>
		<module name="ParameterNumber"/>-->


		<!-- Checks for whitespace       -->
		<!--<module name="GenericWhitespace"/>
		<module name="EmptyForInitializerPad"/>
		<module name="EmptyForIteratorPad"/>
		<module name="MethodParamPad"/>
		<module name="NoWhitespaceAfter"/>
		<module name="NoWhitespaceBefore"/>
		<module name="OperatorWrap"/>
		<module name="ParenPad"/>
		<module name="TypecastParenPad"/>
		<module name="WhitespaceAfter"/>
		<module name="WhitespaceAround"/>

		<module name="NoWhitespaceBefore" token="LPAREN" />
		<module name="NoWhitespaceAfter" token="RPAREN" />-->


		<!-- Modifier Checks    -->
		<!--<module name="ModifierOrder"/>
		<module name="RedundantModifier"/>-->


		<!-- Checks for blocks. You know, those {}'s -->
		<!--<module name="AvoidNestedBlocks"/>
		<module name="EmptyBlock"/>
		<module name="LeftCurly"/>
		<module name="NeedBraces"/>
		<module name="RightCurly"/>-->


		<!-- Checks for common coding problems       -->
		<!--<module name="AvoidInlineConditionals"/>
		<module name="DoubleCheckedLocking"/>
		<module name="EmptyStatement"/>
		<module name="EqualsHashCode"/>
		<module name="HiddenField"/>
		<module name="IllegalInstantiation"/>
		<module name="InnerAssignment"/>
		<module name="MagicNumber"/>
		<module name="MissingSwitchDefault"/>
		<module name="RedundantThrows"/>
		<module name="SimplifyBooleanExpression"/>
		<module name="SimplifyBooleanReturn"/>-->

		<!-- Checks for class design -->
		<!--<module name="DesignForExtension"/>
		<module name="FinalClass"/>
		<module name="HideUtilityClassConstructor"/>
		<module name="InterfaceIsType"/>
		<module name="VisibilityModifier"/>-->


		<!-- Miscellaneous other checks.   -->
		<!--<module name="ArrayTypeStyle"/>
		<module name="FinalParameters"/>
		<module name="GenericIllegalRegexp">
			<property name="format" value="\s+$"/>
			<property name="message" value="Line has trailing spaces."/>
		</module>
		<module name="TodoComment"/>
		<module name="UpperEll"/>-->
    </module>
</module>
